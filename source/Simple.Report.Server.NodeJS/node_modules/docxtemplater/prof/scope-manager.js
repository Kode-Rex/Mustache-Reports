"use strict";
var profile=(profile?profile:(function(){return require("/home/edgar/.local/lib/node_modules/profi-stanbul/profile.js");})());
var _createClass=function(){function defineProperties(target,props){var _p=profile.start('defineProperties',__filename,arguments);try{for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}finally{profile.end(_p);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){var _p=profile.start('_classCallCheck',__filename,arguments);try{if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}finally{profile.end(_p);}}var Errors=require('./errors');// This class responsibility is to manage the scope
var ScopeManager=function(){function ScopeManager(options){var _p=profile.start('ScopeManager',__filename,arguments);try{_classCallCheck(this,ScopeManager);this.scopePath=options.scopePath;this.scopeList=options.scopeList;this.parser=options.parser;}finally{profile.end(_p);}}_createClass(ScopeManager,[{key:'loopOver',value:function loopOver(tag,callback,inverted){var _p=profile.start('loopOver',__filename,arguments);try{inverted=inverted||false;return this.loopOverValue(this.getValue(tag),callback,inverted);}finally{profile.end(_p);}}},{key:'functorIfInverted',value:function functorIfInverted(inverted,functor,value){var _p=profile.start('functorIfInverted',__filename,arguments);try{if(inverted){functor(value);}}finally{profile.end(_p);}}},{key:'isValueFalsy',value:function isValueFalsy(value,type){var _p=profile.start('isValueFalsy',__filename,arguments);try{return value==null||!value||type==='[object Array]'&&value.length===0;}finally{profile.end(_p);}}},{key:'loopOverValue',value:function loopOverValue(value,functor,inverted){var _p=profile.start('loopOverValue',__filename,arguments);try{var type=Object.prototype.toString.call(value);var currentValue=this.scopeList[this.num];if(this.isValueFalsy(value,type)){return this.functorIfInverted(inverted,functor,currentValue);}if(type==='[object Array]'){for(var i=0,scope;i<value.length;i++){scope=value[i];this.functorIfInverted(!inverted,functor,scope);}return;}if(type==='[object Object]'){return this.functorIfInverted(!inverted,functor,value);}if(value===true){return this.functorIfInverted(!inverted,functor,currentValue);}}finally{profile.end(_p);}}},{key:'getValue',value:function getValue(tag,num){var _p=profile.start('getValue',__filename,arguments);try{// search in the scopes (in reverse order) and keep the first defined value
this.num=num==null?this.scopeList.length-1:num;var err=void 0;var parser=void 0;var result=void 0;var scope=this.scopeList[this.num];try{parser=this.parser(tag);}catch(error){err=new Errors.XTScopeParserError('Scope parser compilation failed');err.properties={id:'scopeparser_compilation_failed',tag:tag,explanation:'The scope parser for the tag '+tag+' failed to compile',rootError:error};throw err;}try{result=parser.get(scope,{num:this.num,scopeList:this.scopeList});}catch(error){err=new Errors.XTScopeParserError('Scope parser execution failed');err.properties={id:'scopeparser_execution_failed',explanation:'The scope parser for the tag '+tag+' failed to execute',scope:scope,tag:tag,rootError:error};throw err;}if(result==null&&this.num>0){return this.getValue(tag,this.num-1);}return result;}finally{profile.end(_p);}}},{key:'createSubScopeManager',value:function createSubScopeManager(scope,tag){var _p=profile.start('createSubScopeManager',__filename,arguments);try{var options={scopePath:this.scopePath.slice(0),scopeList:this.scopeList.slice(0)};options.parser=this.parser;options.scopeList=this.scopeList.concat(scope);options.scopePath=this.scopePath.concat(tag);return new ScopeManager(options);}finally{profile.end(_p);}}}]);return ScopeManager;}();ScopeManager.createBaseScopeManager=function(_ref){var _p=profile.start('ScopeManager.createBaseScopeManager',__filename,arguments);try{var parser=_ref.parser,tags=_ref.tags;var options={parser:parser,tags:tags};options.scopePath=[];options.scopeList=[tags];return new ScopeManager(options);}finally{profile.end(_p);}};module.exports=ScopeManager;
