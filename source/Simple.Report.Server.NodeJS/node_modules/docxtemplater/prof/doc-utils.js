"use strict";
var profile=(profile?profile:(function(){return require("/home/edgar/.local/lib/node_modules/profi-stanbul/profile.js");})());
function _defineProperty(obj,key,value){var _p=profile.start('_defineProperty',__filename,arguments);try{if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}finally{profile.end(_p);}}var memoize=require('./memoize');var DOMParser=require('xmldom').DOMParser;var XMLSerializer=require('xmldom').XMLSerializer;var Errors=require('./errors');var DocUtils={};function parser(tag){var _p=profile.start('parser',__filename,arguments);try{return _defineProperty({},'get',function get(scope){var _p=profile.start('get',__filename,arguments);try{if(tag==='.'){return scope;}return scope[tag];}finally{profile.end(_p);}});}finally{profile.end(_p);}}DocUtils.defaults={nullGetter:function nullGetter(part){var _p=profile.start('nullGetter',__filename,arguments);try{if(!part.module){return'undefined';}if(part.module==='rawxml'){return'';}return'';}finally{profile.end(_p);}},parser:memoize(parser),delimiters:{start:'{',end:'}'}};DocUtils.mergeObjects=function(){var _p=profile.start('DocUtils.mergeObjects',__filename,arguments);try{var resObj={};var obj=void 0,keys=void 0;for(var i=0;i<arguments.length;i+=1){obj=arguments[i];keys=Object.keys(obj);for(var j=0;j<keys.length;j+=1){resObj[keys[j]]=obj[keys[j]];}}return resObj;}finally{profile.end(_p);}};DocUtils.xml2str=function(xmlNode){var _p=profile.start('DocUtils.xml2str',__filename,arguments);try{var a=new XMLSerializer();return a.serializeToString(xmlNode);}finally{profile.end(_p);}};DocUtils.decodeUtf8=function(s){var _p=profile.start('DocUtils.decodeUtf8',__filename,arguments);try{try{if(s===undefined){return undefined;}// replace Ascii 160 space by the normal space, Ascii 32
return decodeURIComponent(escape(DocUtils.convertSpaces(s)));}catch(e){var err=new Error('End');err.properties.data=s;err.properties.explanation='Could not decode string to UTF8';throw err;}}finally{profile.end(_p);}};DocUtils.encodeUtf8=function(s){var _p=profile.start('DocUtils.encodeUtf8',__filename,arguments);try{return unescape(encodeURIComponent(s));}finally{profile.end(_p);}};DocUtils.str2xml=function(str,errorHandler){var _p=profile.start('DocUtils.str2xml',__filename,arguments);try{var parser=new DOMParser({errorHandler:errorHandler});return parser.parseFromString(str,'text/xml');}finally{profile.end(_p);}};DocUtils.charMap={'&':'&amp;','\'':'&apos;','<':'&lt;','>':'&gt;'};var regexStripRegexp=/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g;DocUtils.escapeRegExp=function(str){var _p=profile.start('DocUtils.escapeRegExp',__filename,arguments);try{return str.replace(regexStripRegexp,'\\$&');}finally{profile.end(_p);}};DocUtils.charMapRegexes=Object.keys(DocUtils.charMap).map(function(endChar){var startChar=DocUtils.charMap[endChar];return{rstart:new RegExp(DocUtils.escapeRegExp(startChar),'g'),rend:new RegExp(DocUtils.escapeRegExp(endChar),'g'),start:startChar,end:endChar};});DocUtils.wordToUtf8=function(string){var _p=profile.start('DocUtils.wordToUtf8',__filename,arguments);try{var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rstart,r.end);}return string;}finally{profile.end(_p);}};DocUtils.utf8ToWord=function(string){var _p=profile.start('DocUtils.utf8ToWord',__filename,arguments);try{if(typeof string!=='string'){string=string.toString();}var r=void 0;for(var i=0,l=DocUtils.charMapRegexes.length;i<l;i++){r=DocUtils.charMapRegexes[i];string=string.replace(r.rend,r.start);}return string;}finally{profile.end(_p);}};DocUtils.cloneDeep=function(obj){var _p=profile.start('DocUtils.cloneDeep',__filename,arguments);try{return JSON.parse(JSON.stringify(obj));}finally{profile.end(_p);}};DocUtils.concatArrays=function(arrays){var _p=profile.start('DocUtils.concatArrays',__filename,arguments);try{return arrays.reduce(function(result,array){Array.prototype.push.apply(result,array);return result;},[]);}finally{profile.end(_p);}};var spaceRegexp=new RegExp(String.fromCharCode(160),'g');DocUtils.convertSpaces=function(s){var _p=profile.start('DocUtils.convertSpaces',__filename,arguments);try{return s.replace(spaceRegexp,' ');}finally{profile.end(_p);}};DocUtils.pregMatchAll=function(regex,content){var _p=profile.start('DocUtils.pregMatchAll',__filename,arguments);try{/* regex is a string, content is the content. It returns an array of all matches with their offset, for example:
 	 regex=la
 	 content=lolalolilala
 returns: [{array: {0: 'la'},offset: 2},{array: {0: 'la'},offset: 8},{array: {0: 'la'} ,offset: 10}]
 */
var matchArray=[];var match=void 0;while((match=regex.exec(content))!=null){matchArray.push({array:match,offset:match.index});}return matchArray;}finally{profile.end(_p);}};DocUtils.sizeOfObject=function(obj){var _p=profile.start('DocUtils.sizeOfObject',__filename,arguments);try{return Object.keys(obj).length;}finally{profile.end(_p);}};function throwXmlTagNotFound(options){var _p=profile.start('throwXmlTagNotFound',__filename,arguments);try{var err=new Errors.XTTemplateError('No tag \''+options.element+'\' was found at the '+options.position);err.properties={id:'no_xml_tag_found_at_'+options.position,explanation:'No tag \''+options.element+'\' was found at the '+options.position,parsed:options.parsed,index:options.index,element:options.element};throw err;}finally{profile.end(_p);}}DocUtils.getRight=function(parsed,element,index){var _p=profile.start('DocUtils.getRight',__filename,arguments);try{for(var i=index,l=parsed.length;i<l;i++){var part=parsed[i];if(part.value==='</'+element+'>'){return i;}}throwXmlTagNotFound({position:'right',element:element,parsed:parsed,index:index});}finally{profile.end(_p);}};DocUtils.getLeft=function(parsed,element,index){var _p=profile.start('DocUtils.getLeft',__filename,arguments);try{for(var i=index;i>=0;i--){var part=parsed[i];if(part.value.indexOf('<'+element)===0&&['>',' '].indexOf(part.value[element.length+1])!==-1){return i;}}throwXmlTagNotFound({position:'left',element:element,parsed:parsed,index:index});}finally{profile.end(_p);}};module.exports=DocUtils;
