"use strict";
var profile=(profile?profile:(function(){return require("/home/edgar/.local/lib/node_modules/profi-stanbul/profile.js");})());
var _createClass=function(){function defineProperties(target,props){var _p=profile.start('defineProperties',__filename,arguments);try{for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}finally{profile.end(_p);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){var _p=profile.start('_classCallCheck',__filename,arguments);try{if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function');}}finally{profile.end(_p);}}var DocUtils=require('./doc-utils');var ScopeManager=require('./scope-manager');var xmlMatcher=require('./xml-matcher');var Errors=require('./errors');var Lexer=require('./lexer');var Parser=require('./parser.js');var _render=require('./render.js');function _getFullText(content,tagsXmlArray){var _p=profile.start('_getFullText',__filename,arguments);try{var matcher=xmlMatcher(content,tagsXmlArray);var result=matcher.matches.map(function(match){return match.array[2];});return DocUtils.wordToUtf8(DocUtils.convertSpaces(result.join('')));}finally{profile.end(_p);}}module.exports=function(){function XmlTemplater(content,options){var _p=profile.start('XmlTemplater',__filename,arguments);try{_classCallCheck(this,XmlTemplater);this.fromJson(options);this.setModules({inspect:{filePath:this.filePath}});this.load(content);}finally{profile.end(_p);}}_createClass(XmlTemplater,[{key:'load',value:function load(content){var _p=profile.start('load',__filename,arguments);try{if(typeof content!=='string'){var err=new Errors.XTInternalError('Content must be a string');err.properties.id='xmltemplater_content_must_be_string';throw err;}this.content=content;}finally{profile.end(_p);}}},{key:'setTags',value:function setTags(tags){var _p=profile.start('setTags',__filename,arguments);try{this.tags=tags!=null?tags:{};this.scopeManager=ScopeManager.createBaseScopeManager({tags:this.tags,parser:this.parser});return this;}finally{profile.end(_p);}}},{key:'fromJson',value:function fromJson(options){var _p=profile.start('fromJson',__filename,arguments);try{this.filePath=options.filePath;this.modules=options.modules;this.fileTypeConfig=options.fileTypeConfig;Object.keys(DocUtils.defaults).map(function(key){this[key]=options[key]!=null?options[key]:DocUtils.defaults[key];},this);}finally{profile.end(_p);}}},{key:'getFullText',value:function getFullText(){var _p=profile.start('getFullText',__filename,arguments);try{return _getFullText(this.content,this.fileTypeConfig.tagsXmlTextArray);}finally{profile.end(_p);}}},{key:'setModules',value:function setModules(obj){var _p=profile.start('setModules',__filename,arguments);try{this.modules.forEach(function(module){module.set(obj);});}finally{profile.end(_p);}}},{key:'parse',value:function parse(){var _p=profile.start('parse',__filename,arguments);try{this.xmllexed=Lexer.xmlparse(this.content,{text:this.fileTypeConfig.tagsXmlTextArray,other:this.fileTypeConfig.tagsXmlLexedArray});this.setModules({inspect:{xmllexed:this.xmllexed}});this.lexed=Lexer.parse(this.xmllexed,this.delimiters);this.setModules({inspect:{lexed:this.lexed}});this.parsed=Parser.parse(this.lexed,this.modules);this.setModules({inspect:{parsed:this.parsed}});this.postparsed=Parser.postparse(this.parsed,this.modules);return this;}finally{profile.end(_p);}}/*
  content is the whole content to be tagged
  scope is the current scope
  returns the new content of the tagged content
  */},{key:'render',value:function render(){var _p=profile.start('render',__filename,arguments);try{this.setModules({inspect:{postparsed:this.postparsed}});this.content=_render({compiled:this.postparsed,tags:this.tags,modules:this.modules,parser:this.parser,nullGetter:this.nullGetter,filePath:this.filePath});this.setModules({inspect:{content:this.content}});return this;}finally{profile.end(_p);}}}]);return XmlTemplater;}();
